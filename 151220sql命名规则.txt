数据库命名规范：
 1. 数据库名： 
        1.1）用产品或项目的名字命名；
        1.2）Pascal Case，如AdventureWork; 
        1.3）避免使用特殊字符，如数字，下划线，空格之类；
        1.4）避免使用缩写
 
2. 表名
        2.1）使用复数，Pascal Case，而复数只加在最后一个单词上如：Products，Users，UserRoles
        2.2）避免使用特殊字符，如数字，下划线，空格之类；
        2.3）避免使用缩写
 
3. 列名
        3.1） 使用Pascal Case
        3.2） 避免和表名重复，避免数据类型前缀如: Int
        3.3） 避免使用缩写或者特殊字符

 
4. 存储过程
        4.1）用动词加表名描述操作类型
        4.2）使用前缀：sp+{“Insert”, “Update”, “Delete”, “Get”, “Validate”,...}

 
5.  视图
            5.1）参考表名规则
            5.2）用"vw"做前缀

 
6. 触发器
            6.1）使用"trg"前缀
            6.2） 使用操作类型+表名，如：trg_ProductsInsert

 
7. 索引
            7.1）使用格式如：idx_{表名}_{索引列名}_{Unique/NonUnique}_{Cluster/NonCluster}

 
8. 主键
          8.1） 使用格式如：pk_{表名}_{主键列名}

 
9. 外键
          9.1） 使用格式如：fk_{主表名}_{主表的列名}_{引用表名}_{引用表的列名}
 
10. default
      10.1） 使用格式如：df_{表名}_{列名}

 
11. 约束
      11.1） 使用格式如：ck_{表名}_{列名}

 
12. 变量
      12.1） 参照列名规则
 

如果你肯定存储的数据长度，而且不包中文的，可以选择char类型。

如果肯定存储的数据长度，但可能包括中文，可以选择nchar类型。

如果不确定存储的数据长度，存储只有英文、数字的最好用varchar

如果不确定存储的数据长度，也有可能有中文，可以选择nvarchar类型
（1）       定义：

char：    固定长度，存储ANSI字符，不足的补英文半角空格。

nchar：   固定长度，存储Unicode字符，不足的补英文半角空格

varchar：  可变长度，存储ANSI字符，根据数据长度自动变化。

nvarchar： 可变长度，存储Unicode字符，根据数据长度自动变化。

 

nvarchar(n) ：包含 n个字符的可变长度 Unicode 字符数据。n 的值必须介于 1  与  4,000 之间。字节的存储大小是所输入字符个数的两倍。所输入的数据字符长度可以为零。

  varchar[(n)]：长度为 n 个字节的可变长度且非 Unicode的字符数据。n 必须是一个介于   1 和 8,000之间的数值。存储大小为输入数据的字节的实际长度，而不是 n 个字节。所输入的数据字符长度可以为零。

注意：      ANSI主要是以单字节来存储数据，一般适合英文。而我们常用的汉字需要用两个字节来存储，所以就要使用unicode的数据类型，不然读取出来的数据可能会乱码。

（2）区别：

      ①从存储方式上，nvarchar是按字符存储的，而 varchar是按字节存储的；

      ②从存储量上考虑， varchar比较节省空间，因为存储大小为字节的实际长度，而 nvarchar是双字节存储；

      ③在使用上，如果存储内容都是英文字符而没有汉字等其他语言符号，建议使用varchar；含有汉字的使用nvarchar，因为nvarchar是使用Unicode编码，即统一的字符编码标准，会减少乱码的出现几率；

④   如果你做的项目可能涉及不同语言之间的转换，建议用nvarchar。

（3）优缺点：

   Nvarchar优点：判断字符串的时候可以不需要考虑中英文两种字符的差别，可以避免程序中乱码的问题。

           缺点：存储英文字符会增大一倍的存储空间．但是在存储代价已经很低廉的情况下，优先考虑兼容性会给你带来更多好处的，效率没有varchar高。

（4）为什么要用nvarchar?

    有n前缀的，n表示Unicode字符，即所有字符都占两个字节,nchar,nvarchar

字符中，英文字符只需要一个字节存储就足够了，但汉字众多，需要两个字节存储，英文与汉字同时存在时容易造成混乱，Unicode字符集就是为了解决字符集这种不兼容的问题而产生的，它所有的字符都用两个字节表示，即英文字符也是用两个字节表示。

（5）有关var的简单介绍：

有var前缀的，表示是实际存储空间是变长的，varchar,nvarchar

所谓定长就是长度固定的，当输入的数据长度没有达到指定的长度时将自动以英文空格在其后面填充，使长度达到相应的长度；而变长字符数据则不会以空格填充，比较例外的是，text存储的也是可变长。