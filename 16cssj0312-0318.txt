2016/3/12
一.css选择器
1.基本选择器
2.层次选择器
3.伪类选择器
(1)动态伪类选择器
(2)目标伪类选择器
(3)语言伪类选择器
(4)UI元素伪类选择器
(5)结构伪类选择器
(6)否定伪类选择器
4.伪元素
5.属性选择器

1.基本选择器
(1)* 选择所有html元素 .demo *{} 
   demo类下所有元素(demo和*中间要有空格)
(2)e 元素选择器.
   例 li{}
   选择<li>包括<li>下的所有元素
   h1 {color:red; font-size:14px;}
(3)#id id选择器
   id不要起数字.不识别
   #first{background:lime;color:#000}
(4).class 类选择器
类选择器在同一个页面中可以有多个相同的类名.但id选择器其id值在同个页面中唯一
   .item.important{background:red;}选取是item类且是important类的元素
   ul.block{}选取ul元素且类名为block

2.层次选择器
通过html的dom元素间的层次关系获取元素.
(1)E F 后代选择器 选择F元素.且F元素被包含在E元素内
   div div{background:orange;}选取div元素里的所有后代div元素
   如果不分开h1#content{}针对所有id为content的h1
(2)E>F 子元素选择器 选择F元素.且F元素是E元素的直接子元素
   body>div{background:green;}选取body元素的子元素为div的元素
(3)E+F 相邻兄弟选择器 选择F元素.且F紧邻E元素
   .active+div{background:lime;}选择active类的紧邻兄弟元素
(4)E~F 通用选择器 选择F元素.且F是位于E后面的所有F

3.伪类选择器
伪类选择器均已:开头
(1)动态伪类选择器
E:link 链接伪类选择器 选择E元素.且E为超链接且未被访问过.常用于链接锚点上
E:visited 链接伪类选择器 选择E元素.且超链接已被访问过
E:active 用户行为伪类选择器 选择E元素.且元素被激活.常用于锚点和按钮上
E:hover 用户行为伪类选择器 选择E元素.且当用户鼠标悬停在E上
E:focus 用户行为伪类选择器 选择E元素.且E获得焦点

(2)目标伪类选择器
:target 选择链接的目标元素.点击链接的一瞬间触发(不确定)
css中 .menu:target p{}
对应html中
<div class="menu">
   <div id="#brand">
      <h2>
         <a href="#brand">Brand</a>
      </h2>
   </div>
</div>

(3)语言伪类选择器
(4)UI元素状态伪类选择器
E:checked 匹配选中的复选框按钮或单选按钮
E:enabled 匹配所有启用的表单元素
E:disabled 匹配所有禁用的表单元素
textarea:focus,input[type="text"]:focus{}
input[disabled]等价于input:disabled

(4)结构伪类选择器
E:first-child:选择E的第一个孩子节点
E:last-child
E:root
E F:nth-child(n):选择父元素E的第n个子元素F
   如ul>li:nth-child(2)
    ul>li:nth-child(3n):选取3,6,9...

(5)否定伪类选择器:not()
input:not([type=submit]){...}

(6)选择符分组
div,p,h1{}表示对这几个都生效

2016/3/18
1.颜色
值的不同写法和单位
除了英文单词 red，我们还可以使用十六进制的颜色值 
#ff0000：
p { color: #ff0000; }
为了节约字节，我们可以使用 CSS 的缩写形式：
p { color: #f00; }
我们还可以通过两种方法使用 RGB 值：
p { color: rgb(255,0,0); }
p { color: rgb(100%,0%,0%);}
或者p{color:red;}

二.盒子模型

  盒子模型
  外边框 margin
  边框 border
  内边距 padding

有width和height.内边距padding.边框border.外边距margin
内边距外边距边框等都会对盒子模型的大小产生影响
1.元素的背景
(1)背景颜色属性background-color
(2)背景图片
background-image:url(images/pic.jpg)
(3)背景重复属性
background-repeat:no-repeat;
(4)背景图片位置属性
background-position:top,center,left,right,bottom
background-position:top left;元素背景图片的起点位置与元素左上角吻合
(5)背景补白
padding:top right bottom left
例如padding:100px 100px 100px 100px
padding:上下  左右
例如padding 100px 100px
padding:上  左右  下
例如padding 100px 100px 100px

2.元素的边框
<1>border:border-width border-style border-color;
(1)顶部边框样式属性border-top-style
none:没有边框
hidden:隐藏边框
dotted:边框为点线
dashed:边框为虚线
solid:边框为实线
double:边框为双线
groove:边框为3d凹槽
ridge:边框为菱形
inset:边框为3d凹边
outset:凸边

(2)右侧边框样式属性border-right-style
(3)左侧边框样式属性
(4)底部边框样式属性border-buttom-style

<2>顶部边框颜色属性border-top-color
...
<3>顶部边框宽度属性border-top-width
...
<4>边框样式属性border-style
<5>边框颜色属性border-color
<6>边框宽度属性border-width

<7>边框综合属性
border
div
{
   border:20px red double;
}

3.元素边界margin

三.控制元素定位
1.元素的定位属性position
static:默认值.按照元素默认方式显示
absolute:绝对定位
relative:相对定位
div{
   position:relative;
   left:200px;
   top:50px;
   border:3px solid #333333;
   width:400px;
   height:50px;
}

2.定位元素重叠
z-index:在第几层显示
.a{z-index:2}


1.position: static
在CSS中所有元素的“position”属性的默认值都是“static”，因为不需要显式的为每个元素设置“position:static”。一般用不到

2.相对定位position:relative
元素设置了relative时，是相对于元素本身位置进行定位；
元素设置了relative后，可以通过“Top,Right,Bottom,Left”改变元素当前所在的位置，但元素移位后，同样占有当初的物理空间；
元素设置了relative后，如果没有进行任何的“T-R-B-L”设置，元素不会进行任何位置改变。

3.绝对定位position:absolute
如果你给元素指定了absolute，整个元素就会漂出文档流，而且元素自身的物理空间也同时消失了。不像“relative”还具有原先的物理空间。

4.relative和absolute的结合
absolute默认是根据当前页面进行绝对定位.但是当离自己最近的父元素定义为relative时.便会相对于其父元素进行绝对定位



四:css控制元素的布局
1.元素的浮动属性
float:none|left|right
如果父元素容器够大.当浮动元素在固定元素之前会同行显示.
浮动元素在固定元素之后则换行显示
2.多个浮动元素
则按照浮动元素定义的先后顺序对元素进行排列

3.浮动的清除
clear
both:清除所有浮动 none:不清除 left清除左浮动 right 
2016/3/23
浮动会导致该浮动框脱离普通流(即不再占据空间)
这样会导致原先包裹它的外边框(因为它脱离了.所以外边框会变小.无法包裹它.)
可以在包裹它的div里加个空的div.
再应用clear:both;清除浮动.这样清除原先浮动就可以找到外边框了.
clear 属性的值可以是 left、right、both 或 none，它表示框的哪些边不应该挨着浮动框。

4.内容裁剪

五.渐变
.btn
{
   width:310px;
   height:30px;
   //Webkit引擎支持的标准(不需要了)
   background-image: -webkit-linear-gradient(to top,orange, green);
   //w3c支持的css3新标准.firefox上用这个
   background-image:linear-gradient(to top,orange,green);
}

 background-image:linear-gradient(to top,orange,green);
线性渐变:to top,to right,to bottom,to left,top left(到左上角),top right,
对应角度0deg,90deg,180deg,270deg

可以写很多颜色对应多彩渐变
bottom:底部 button:按钮
background-image:linear-gradient(to bottom,#868382,#1F1915,#3C312B);
从上到下的三色渐变

六.css控制文本的显示
1.字体选择属性font-family
div{font-family:"黑体";}

2.字体颜色属性color
div{color:yellow;}

3.字体大小属性font-size
通常以px为单位
常用属性值
xx-small:定义字体为最小字体
x-small:较小
small:小
medium:正常
large:大
x-large:较大
xx-large:最大
larger:相对父元素字体增大
smaller:相对父元素字体减小
length:字体设置为一个固定值
div{font-size:}

4.字体样式属性font-style
属性值有:
normal:正常显示字体
italic:斜体
oblique:倾斜字体

5.字体加粗属性font-weight
属性值:
normal:正常
bold:粗体
bolder:比normal略大
lighter:比normal略小
100-900:分9个层次定义粗细

6.字体修饰属性text-decoration
属性值
none:无
overline:上划线
line-through:删除线
underline:下划线
blink:闪烁

7.字母间隔属性letter-spacing
div{letter-spacing:20px;}

8.单词间间隔属性word-spacing
div{word-spacing:5em;}

9.行高属性line-height
div{line-height:200%;}

10.字体综合属性font
用来统一定义字体的各种属性.
font:font-family font-size font-weight font-size line-height

11.控制文本的显示
(1)文本缩进属性text-indent
p{text-indent:3em}
(2)文本溢出属性text-overflow
clip:裁剪但是不显示省略标记
ellipsis:文本溢出时,显示省略标记
(3)水平对齐属性text-align
left,right,center,justify

(4)垂直对齐属性vertical-align
auto:自动对齐
baseline:内容与基线对齐
sub:内容与上标对齐
super:内容与下标对齐
top:内容与顶部对齐
text-top:内容与文本顶部对齐
(5)文本流向属性layout-flow
horizontal:从左到右显示
vertical-ideographic:从上到下显示

二.css控制列表元素的显示<div>
1.列表符号属性list-style-type
disc:实心圆点
circle:空心圆点
square:实心方块
decimal:阿拉伯数字
lower-roman:小写罗马字母
upper-roman:大写罗马字母
lower-alpha:小写英文字母
upper-alpha:大写英文字母
none:不使用符号




3.杂例
#mall_body{
	width:860px;
	height:400px;
	边框实线
	border: 1px solid red;
	外边距.
		margin: 0 auto ;
}

显示两个文本框 中间有个- 在页面显示-
<input size="6" type="text" />-<input size="6" type="text"/>

伪类 :hover 当鼠标悬停.
盒子的浮动
元素的浮动属性 float
设置了浮动属性的元素会脱离标准文档流的控制
移动到其父元素中相应位置的过程
在css中.通过float属性来浮动

float属性值
left right
使用clear属性清除浮动
overflow
after属性

.mall_product_price>div儿子节点
.mall_product_price div子节点