2016/3/18
1.文档类型
(1).过渡型
<!DOCTYPE...transitional.dtd">
(2).严格的
<!DOCTYPE...strict.dtd">
(3).框架的
<!DOCTYPE...frameset.dtd">

2.元信息元素
<meta>

3.链接元素
<link href="main.css" rel="stylesheet" type="text/css"/>
rel属性用来指定源文档到链接文档之间的关系.stylesheet是链接到样式片段

4.脚本元素
<script type="text/javascript">
...
</script>

5.
<input type="submit" value="显示的文本"/>

一.css控制文本的显示
1.字体选择属性font-family
div{font-family:"黑体";}

2.字体颜色属性color
div{color:yellow;}

3.字体大小属性font-size
通常以px为单位
常用属性值
xx-small:定义字体为最小字体
x-small:较小
small:小
medium:正常
large:大
x-large:较大
xx-large:最大
larger:相对父元素字体增大
smaller:相对父元素字体减小
length:字体设置为一个固定值
div{font-size:}

4.字体样式属性font-style
属性值有:
normal:正常显示字体
italic:斜体
oblique:倾斜字体

5.字体加粗属性font-weight
属性值:
normal:正常
bold:粗体
bolder:比normal略大
lighter:比normal略小
100-900:分9个层次定义粗细

6.字体修饰属性text-decoration
属性值
none:无
overline:上划线
line-through:删除线
underline:下划线
blink:闪烁

7.字母间隔属性letter-spacing
div{letter-spacing:20px;}

8.单词间间隔属性word-spacing
div{word-spacing:5em;}

9.行高属性line-height
div{line-height:200%;}

10.字体综合属性font
用来统一定义字体的各种属性.
font:font-family font-size font-weight font-size line-height

11.控制文本的显示
(1)文本缩进属性text-indent
p{text-indent:3em}
(2)文本溢出属性text-overflow
clip:裁剪但是不显示省略标记
ellipsis:文本溢出时,显示省略标记
(3)水平对齐属性text-align
left,right,center,justify

(4)垂直对齐属性vertical-align
auto:自动对齐
baseline:内容与基线对齐
sub:内容与上标对齐
super:内容与下标对齐
top:内容与顶部对齐
text-top:内容与文本顶部对齐
(5)文本流向属性layout-flow
horizontal:从左到右显示
vertical-ideographic:从上到下显示

二.css控制列表元素的显示<div>
1.列表符号属性list-style-type
disc:实心圆点
circle:空心圆点
square:实心方块
decimal:阿拉伯数字
lower-roman:小写罗马字母
upper-roman:大写罗马字母
lower-alpha:小写英文字母
upper-alpha:大写英文字母
none:不使用符号

三.盒子模型
有width和height.内边距padding.边框border.外边距margin
1.元素的背景
(1)背景颜色属性background-color
(2)背景图片
background-image:url(images/pic.jpg)
(3)背景重复属性
background-repeat
(4)背景图片位置属性
background-position:top,center,left,right,bottom
background-position:top left;元素背景图片的起点位置与元素左上角吻合
(5)背景补白
padding:top right bottom left
例如padding:100px 100px 100px 100px
padding:上下  左右
例如padding 100px 100px
padding:上  左右  下
例如padding 100px 100px 100px

2.元素的边框
<1>border:border-width border-style border-color;
(1)顶部边框样式属性border-top-style
none:没有边框
hidden:隐藏边框
dotted:边框为点线
dashed:边框为虚线
solid:边框为实线
double:边框为双线
groove:边框为3d凹槽
ridge:边框为菱形
inset:边框为3d凹边
outset:凸边

(2)右侧边框样式属性border-right-style
(3)左侧边框样式属性
(4)底部边框样式属性border-buttom-style

<2>顶部边框颜色属性border-top-color
...
<3>顶部边框宽度属性border-top-width
...
<4>边框样式属性border-style
<5>边框颜色属性border-color
<6>边框宽度属性border-width

<7>边框综合属性
border
div
{
   border:20px red double;
}

3.元素边界margin

三.控制元素定位
1.元素的定位属性position
static:默认值.按照元素默认方式显示
absolute:绝对定位
relative:相对定位
div{
   position:relative;
   left:200px;
   top:50px;
   border:3px solid #333333;
   width:400px;
   height:50px;
}

2.定位元素重叠
z-index:在第几层显示
.a{z-index:2}

四:css控制元素的布局
1.元素的浮动属性
float:none|left|right
如果父元素容器够大.当浮动元素在固定元素之前会同行显示.
浮动元素在固定元素之后则换行显示
2.多个浮动元素
则按照浮动元素定义的先后顺序对元素进行排列

3.浮动的清除
clear
none:不清除 left清除左浮动 right both

4.内容裁剪

五.渐变
.btn
{
   width:310px;
   height:30px;
   //Webkit引擎支持的标准(不需要了)
   background-image: -webkit-linear-gradient(to top,orange, green);
   //w3c支持的css3新标准.firefox上用这个
   background-image:linear-gradient(to top,orange,green);
}

 background-image:linear-gradient(to top,orange,green);
线性渐变:to top,to right,to bottom,to left,top left(到左上角),top right,
对应角度0deg,90deg,180deg,270deg

可以写很多颜色对应多彩渐变
bottom:底部 button:按钮
background-image:linear-gradient(to bottom,#868382,#1F1915,#3C312B);
从上到下的三色渐变

绝对定位
通常我们使用position:absolute；position:relative进行绝对定位布局，通过CSS进行定义定位，DIV布局HTML，注意什么地方使用position:relative，什么地方使用position:absolute进行定位，同时不要忘记使用left、right、top、bottom的配合定位具体位置。绝对定位如果父级不使用position:relative，而直接使用position:absolute绝对定位，这个时候将会以body标签为父级，使用position:absolute定义对象无论位于DIV多少层结构，都将会被拖出以<body>为父级（参考级）进行绝对定位。绝对定位非常好用，但切记不要滥用，什么地方都用，这样有时会懒得计算距离上、下、左、右间距，同时可能会造成CSS代码臃肿，更加经验适当使用，用于该使用地方。


2016/3/23
浮动
浮动会导致该浮动框脱离普通流(即不再占据空间)
这样会导致原先包裹它的外边框(因为它脱离了.所以外边框会变小.无法包裹它.)
可以在包裹它的div里加个空的div.
再应用clear:both;清除浮动.这样清除原先浮动就可以找到外边框了.
clear 属性的值可以是 left、right、both 或 none，它表示框的哪些边不应该挨着浮动框。
